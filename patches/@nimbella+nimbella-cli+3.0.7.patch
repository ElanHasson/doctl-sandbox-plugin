diff --git a/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js b/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js
index a7c7df0..4e999df 100644
--- a/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js
+++ b/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js
@@ -1,6 +1,6 @@
 var L=Object.create;var p=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var $=(t,e)=>{for(var r in e)p(t,r,{get:e[r],enumerable:!0})},N=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of P(e))!J.call(t,i)&&i!==r&&p(t,i,{get:()=>e[i],enumerable:!(n=_(e,i))||n.enumerable});return t};var H=(t,e,r)=>(r=t!=null?L(I(t)):{},N(e||!t||!t.__esModule?p(r,"default",{value:t,enumerable:!0}):r,t)),U=t=>N(p({},"__esModule",{value:!0}),t);var G={};$(G,{CaptureLogger:()=>k,NimBaseCommand:()=>v,NimFeedback:()=>W,branding:()=>d,disambiguateNamespace:()=>M,parseAPIHost:()=>D,replaceErrors:()=>A,setBranding:()=>B,setHelpHelper:()=>T});module.exports=U(G);var c=require("@oclif/command"),E=require("util"),x=require("http"),m=require("@nimbella/nimbella-deployer"),R=require("@adobe/aio-lib-core-config"),S=require("gaxios"),u=H(require("debug"));const g=(0,u.default)("nim:base"),h=(0,u.default)("nim:error"),C=(0,u.default)("nim:json");let d={brand:"Nimbella",cmdName:"nim",defaultHostSuffix:".nimbella.io",hostPrefix:"api",namespaceRepair:"Use 'nim logon' to create a new one or 'nim auth switch' to use an existing one",workbenchURL:"https://apigcp.nimbella.io/wb",previewWorkbenchURL:"https://preview-apigcp.nimbella.io/workbench",deployedActionsHeader:"Deployed actions ('nim action get <actionName> --url' for URL):"},y,w;function T(t){y=t}function B(t){d=t}class W{constructor(e){this.logger=e}warn(e,...r){this.logger.log(String(e),...r)}progress(e,...r){this.warnOnly||this.logger.log(String(e),...r)}}class k{constructor(){this.captured=[];this.errors=[]}log(e="",...r){const n=String(e).split(`
 `);for(const i of n)this.captured.push((0,E.format)(i,...r))}handleError(e,r){throw r||(e=b(e,r),new Error(e))}displayError(e,r){e=b(e,r),this.errors.push(e)}exit(e){}logJSON(e){this.entity=e}logTable(e,r,n={}){this.table=e,this.tableColumns=r,this.tableOptions=n}logOutput(e,r){this.entity=e,this.captured=r}}function j(t){return"captured"in t}class X extends c.Command{constructor(r,n){super(r,n)}handleError(r,n){}logJSON(r,n){}table(r,n,i={}){}async run(r){}setNamespaceHeaderOmission(r){}}class v extends c.Command{constructor(){super(...arguments);this.makeLogJSON=r=>(n,i)=>{r.entity=i}}doHelp(){y&&this.usage?y(this.usage):this._help()}logJSON(r){C("JSON logging invoked");const i=JSON.stringify(r,A,2).split(`
-`);for(const o of i)super.log(o)}logTable(r,n,i={}){if(this.useJSON){this.logJSON(r);return}w||(w=require("cli-ux").cli),w.table(r,n,i)}log(r="",...n){this.useJSON&&C("Normal log method called with --json in effect"),super.log(r,...n)}logOutput(r,n){if(this.useJSON){this.logJSON(r);return}for(const i of n)this.log(i)}async run(){const{argv:r,args:n,flags:i}=this.parse(this.constructor);g("run with rawArgv: %O, argv: %O, args: %O, flags: %O",this.argv,r,n,i);const o=r.find(a=>a.startsWith("-"));o&&this.handleError(`Unrecognized flag: ${o}`);const s=this.config.options,l=s?s.logger:void 0;this.useJSON=i.json,await this.runCommand(this.argv,r,n,i,l||this),g("runCommand returned")}async runAio(r,n,i,o,s,l){g("runAio with rawArgv: %O, argv: %O, args: %O, flags: %O",r,n,i,o),F(s,o);const a=new l(r,{});o.verbose&&(g("verbose flag intercepted"),o.verbose=!1,h.enabled=!0),(0,R.reload)(),j(s)?(a.log=s.log.bind(s),a.exit=s.exit.bind(s),a.handleError=s.handleError.bind(s),g("aio handleError intercepted in capture mode"),a.parsed={argv:n,args:i,flags:o},a.logJSON=this.makeLogJSON(s),a.table=s.logTable.bind(s),s.command=this.command,g("aio capture intercepts installed"),a.setNamespaceHeaderOmission(!0),await a.run()):(a.handleError=this.handleError.bind(a),g("handleError intercepted in non-capture mode"),await a.run(r))}async dispatch(r,n,i,o){g("dispatch with argv: %O, skip: %d, argTemplates: %O, parsedOptions: %O",r,n,i,o);const s=r.slice(n);this.command=r.slice(0,n),r=o._.slice(n),i||(i=[]);const l={};for(let f=0;f<i.length;f++){const O=r[f];O&&(l[i[f].name]=O)}const a=new k;return g("dispatching to runCommand with rawArgv %O, argv: %O, args: %O, flags: %O",s,r,l,o),await this.runCommand(s,r,l,o,a),a}async init(){const{flags:r}=this.parse(this.constructor);r.verbose?h.enabled=!0:r.debug&&u.default.enable(r.debug)}handleError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:1})}displayError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:!1})}}v.args=[],v.flags={debug:c.flags.string({description:"Debug level output",hidden:!0}),verbose:c.flags.boolean({char:"v",description:"Greater detail in error messages"}),help:c.flags.boolean({description:"Show help"}),json:c.flags.boolean({description:"Provide output in JSON form"})};function A(t,e){if(e instanceof Error){const r={};return Object.getOwnPropertyNames(e).forEach(function(n){r[n]=e[n]}),r}return e}function b(t,e){g("Improving msg: %s, err: %O",t,e);const r=i=>`${i} ${x.STATUS_CODES[i]||""}`.trim();let n="";return e&&(n=e.message||"",e.name==="OpenWhiskError"?e.error&&e.error.error?(n=e.error.error.toLowerCase(),e.statusCode?n=`${n} (${r(e.statusCode)})`:e.error.code&&(n=`${n} (${e.error.code})`)):e.statusCode&&(n=r(e.statusCode)):e instanceof S.GaxiosError&&(n=`An error occurred communicating with Cloud Storage.
+`);for(const o of i)super.log(o)}logTable(r,n,i={}){if(this.useJSON){this.logJSON(r);return}w||(w=require("cli-ux").cli),w.table(r,n,i)}log(r="",...n){this.useJSON&&C("Normal log method called with --json in effect"),super.log(r,...n)}logOutput(r,n){if(this.useJSON){this.logJSON(r);return}for(const i of n)this.log(i)}async run(){const{argv:r,args:n,flags:i}=this.parse(this.constructor);g("run with rawArgv: %O, argv: %O, args: %O, flags: %O",this.argv,r,n,i);const o=r.find(a=>a.startsWith("-"));o&&this.handleError(`Unrecognized flag: ${o}`);const s=this.config.options,l=s?s.logger:void 0;this.useJSON=i.json,await this.runCommand(this.argv,r,n,i,l||this),g("runCommand returned")}async runAio(r,n,i,o,s,l){g("runAio with rawArgv: %O, argv: %O, args: %O, flags: %O",r,n,i,o),F(s,o);const a=new l(r,{});o.verbose&&(g("verbose flag intercepted"),o.verbose=!1,h.enabled=!0),(0,R.reload)(),j(s)?(a.log=s.log.bind(s),a.exit=s.exit.bind(s),a.handleError=s.handleError.bind(s),g("aio handleError intercepted in capture mode"),a.parsed={argv:n,args:i,flags:o},a.logJSON=this.makeLogJSON(s),a.table=s.logTable.bind(s),s.command=this.command,g("aio capture intercepts installed"),a.setNamespaceHeaderOmission(0),await a.run()):(a.handleError=this.handleError.bind(a),g("handleError intercepted in non-capture mode"),await a.run(r))}async dispatch(r,n,i,o){g("dispatch with argv: %O, skip: %d, argTemplates: %O, parsedOptions: %O",r,n,i,o);const s=r.slice(n);this.command=r.slice(0,n),r=o._.slice(n),i||(i=[]);const l={};for(let f=0;f<i.length;f++){const O=r[f];O&&(l[i[f].name]=O)}const a=new k;return g("dispatching to runCommand with rawArgv %O, argv: %O, args: %O, flags: %O",s,r,l,o),await this.runCommand(s,r,l,o,a),a}async init(){const{flags:r}=this.parse(this.constructor);r.verbose?h.enabled=!0:r.debug&&u.default.enable(r.debug)}handleError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:1})}displayError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:!1})}}v.args=[],v.flags={debug:c.flags.string({description:"Debug level output",hidden:!0}),verbose:c.flags.boolean({char:"v",description:"Greater detail in error messages"}),help:c.flags.boolean({description:"Show help"}),json:c.flags.boolean({description:"Provide output in JSON form"})};function A(t,e){if(e instanceof Error){const r={};return Object.getOwnPropertyNames(e).forEach(function(n){r[n]=e[n]}),r}return e}function b(t,e){g("Improving msg: %s, err: %O",t,e);const r=i=>`${i} ${x.STATUS_CODES[i]||""}`.trim();let n="";return e&&(n=e.message||"",e.name==="OpenWhiskError"?e.error&&e.error.error?(n=e.error.error.toLowerCase(),e.statusCode?n=`${n} (${r(e.statusCode)})`:e.error.code&&(n=`${n} (${e.error.code})`)):e.statusCode&&(n=r(e.statusCode)):e instanceof S.GaxiosError&&(n=`An error occurred communicating with Cloud Storage.
 This may be a problem with your ${d.brand} credentials.
 Repeat the command with the '--verbose' flag for more detail`)),(n||"").toString().trim()&&(t=t?`${t}: ${n}`:n),t||(e.status?t=r(e.status):t="unknown error"),g("improved msg: %s",t),t}async function M(t,e,r){if(t.endsWith("-")){t=t.slice(0,-1);let i=(await(0,m.getCredentialList)(m.authPersister)).filter(o=>o.namespace.startsWith(t));if(e&&(i=i.filter(o=>o.apihost===e)),i.length>0)if(i.length>1&&r){let o;return e?o=i.map(s=>s.namespace):o=i.map(s=>`${s.namespace} on ${s.apihost}`),await r(o)}else{if(i.every(o=>o.namespace===i[0].namespace))return i[0].namespace;throw new Error(`Prefix '${t}' matches multiple namespaces`)}}return e?`${t} on ${e}`:t}function D(t){if(!!t)return t.includes(":")?t:t.includes(".")?"https://"+t:(d.hostPrefix&&!t.startsWith(d.hostPrefix)&&(t=d.hostPrefix+t),"https://"+t+d.defaultHostSuffix)}function F(t,e){if(process.env.AIO_RUNTIME_NAMESPACE="_",e&&e.apihost&&e.auth)return;const r=m.authPersister.loadCredentialStoreIfPresent();let n,i,o;if(r&&(n=r.currentHost,i=r.currentNamespace),n&&i){const s=r.credentials[n][i];s?(g("have creds for current namespace"),o=s.api_key):g(`Error retrieving credentials for '${i}' on host '${n}'`)}else t.handleError(`You do not have a current namespace.  ${d.namespaceRepair}`);process.env.AIO_RUNTIME_APIHOST=n,process.env.AIO_RUNTIME_AUTH=o}0&&(module.exports={CaptureLogger,NimBaseCommand,NimFeedback,branding,disambiguateNamespace,parseAPIHost,replaceErrors,setBranding,setHelpHelper});
 //# sourceMappingURL=NimBaseCommand.js.map
diff --git a/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js~ b/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js~
new file mode 100644
index 0000000..a7c7df0
--- /dev/null
+++ b/node_modules/@nimbella/nimbella-cli/lib/NimBaseCommand.js~
@@ -0,0 +1,6 @@
+var L=Object.create;var p=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var $=(t,e)=>{for(var r in e)p(t,r,{get:e[r],enumerable:!0})},N=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of P(e))!J.call(t,i)&&i!==r&&p(t,i,{get:()=>e[i],enumerable:!(n=_(e,i))||n.enumerable});return t};var H=(t,e,r)=>(r=t!=null?L(I(t)):{},N(e||!t||!t.__esModule?p(r,"default",{value:t,enumerable:!0}):r,t)),U=t=>N(p({},"__esModule",{value:!0}),t);var G={};$(G,{CaptureLogger:()=>k,NimBaseCommand:()=>v,NimFeedback:()=>W,branding:()=>d,disambiguateNamespace:()=>M,parseAPIHost:()=>D,replaceErrors:()=>A,setBranding:()=>B,setHelpHelper:()=>T});module.exports=U(G);var c=require("@oclif/command"),E=require("util"),x=require("http"),m=require("@nimbella/nimbella-deployer"),R=require("@adobe/aio-lib-core-config"),S=require("gaxios"),u=H(require("debug"));const g=(0,u.default)("nim:base"),h=(0,u.default)("nim:error"),C=(0,u.default)("nim:json");let d={brand:"Nimbella",cmdName:"nim",defaultHostSuffix:".nimbella.io",hostPrefix:"api",namespaceRepair:"Use 'nim logon' to create a new one or 'nim auth switch' to use an existing one",workbenchURL:"https://apigcp.nimbella.io/wb",previewWorkbenchURL:"https://preview-apigcp.nimbella.io/workbench",deployedActionsHeader:"Deployed actions ('nim action get <actionName> --url' for URL):"},y,w;function T(t){y=t}function B(t){d=t}class W{constructor(e){this.logger=e}warn(e,...r){this.logger.log(String(e),...r)}progress(e,...r){this.warnOnly||this.logger.log(String(e),...r)}}class k{constructor(){this.captured=[];this.errors=[]}log(e="",...r){const n=String(e).split(`
+`);for(const i of n)this.captured.push((0,E.format)(i,...r))}handleError(e,r){throw r||(e=b(e,r),new Error(e))}displayError(e,r){e=b(e,r),this.errors.push(e)}exit(e){}logJSON(e){this.entity=e}logTable(e,r,n={}){this.table=e,this.tableColumns=r,this.tableOptions=n}logOutput(e,r){this.entity=e,this.captured=r}}function j(t){return"captured"in t}class X extends c.Command{constructor(r,n){super(r,n)}handleError(r,n){}logJSON(r,n){}table(r,n,i={}){}async run(r){}setNamespaceHeaderOmission(r){}}class v extends c.Command{constructor(){super(...arguments);this.makeLogJSON=r=>(n,i)=>{r.entity=i}}doHelp(){y&&this.usage?y(this.usage):this._help()}logJSON(r){C("JSON logging invoked");const i=JSON.stringify(r,A,2).split(`
+`);for(const o of i)super.log(o)}logTable(r,n,i={}){if(this.useJSON){this.logJSON(r);return}w||(w=require("cli-ux").cli),w.table(r,n,i)}log(r="",...n){this.useJSON&&C("Normal log method called with --json in effect"),super.log(r,...n)}logOutput(r,n){if(this.useJSON){this.logJSON(r);return}for(const i of n)this.log(i)}async run(){const{argv:r,args:n,flags:i}=this.parse(this.constructor);g("run with rawArgv: %O, argv: %O, args: %O, flags: %O",this.argv,r,n,i);const o=r.find(a=>a.startsWith("-"));o&&this.handleError(`Unrecognized flag: ${o}`);const s=this.config.options,l=s?s.logger:void 0;this.useJSON=i.json,await this.runCommand(this.argv,r,n,i,l||this),g("runCommand returned")}async runAio(r,n,i,o,s,l){g("runAio with rawArgv: %O, argv: %O, args: %O, flags: %O",r,n,i,o),F(s,o);const a=new l(r,{});o.verbose&&(g("verbose flag intercepted"),o.verbose=!1,h.enabled=!0),(0,R.reload)(),j(s)?(a.log=s.log.bind(s),a.exit=s.exit.bind(s),a.handleError=s.handleError.bind(s),g("aio handleError intercepted in capture mode"),a.parsed={argv:n,args:i,flags:o},a.logJSON=this.makeLogJSON(s),a.table=s.logTable.bind(s),s.command=this.command,g("aio capture intercepts installed"),a.setNamespaceHeaderOmission(!0),await a.run()):(a.handleError=this.handleError.bind(a),g("handleError intercepted in non-capture mode"),await a.run(r))}async dispatch(r,n,i,o){g("dispatch with argv: %O, skip: %d, argTemplates: %O, parsedOptions: %O",r,n,i,o);const s=r.slice(n);this.command=r.slice(0,n),r=o._.slice(n),i||(i=[]);const l={};for(let f=0;f<i.length;f++){const O=r[f];O&&(l[i[f].name]=O)}const a=new k;return g("dispatching to runCommand with rawArgv %O, argv: %O, args: %O, flags: %O",s,r,l,o),await this.runCommand(s,r,l,o,a),a}async init(){const{flags:r}=this.parse(this.constructor);r.verbose?h.enabled=!0:r.debug&&u.default.enable(r.debug)}handleError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:1})}displayError(r,n){return this.parse(this.constructor),r=b(r,n),h("%O",n),this.error(r,{exit:!1})}}v.args=[],v.flags={debug:c.flags.string({description:"Debug level output",hidden:!0}),verbose:c.flags.boolean({char:"v",description:"Greater detail in error messages"}),help:c.flags.boolean({description:"Show help"}),json:c.flags.boolean({description:"Provide output in JSON form"})};function A(t,e){if(e instanceof Error){const r={};return Object.getOwnPropertyNames(e).forEach(function(n){r[n]=e[n]}),r}return e}function b(t,e){g("Improving msg: %s, err: %O",t,e);const r=i=>`${i} ${x.STATUS_CODES[i]||""}`.trim();let n="";return e&&(n=e.message||"",e.name==="OpenWhiskError"?e.error&&e.error.error?(n=e.error.error.toLowerCase(),e.statusCode?n=`${n} (${r(e.statusCode)})`:e.error.code&&(n=`${n} (${e.error.code})`)):e.statusCode&&(n=r(e.statusCode)):e instanceof S.GaxiosError&&(n=`An error occurred communicating with Cloud Storage.
+This may be a problem with your ${d.brand} credentials.
+Repeat the command with the '--verbose' flag for more detail`)),(n||"").toString().trim()&&(t=t?`${t}: ${n}`:n),t||(e.status?t=r(e.status):t="unknown error"),g("improved msg: %s",t),t}async function M(t,e,r){if(t.endsWith("-")){t=t.slice(0,-1);let i=(await(0,m.getCredentialList)(m.authPersister)).filter(o=>o.namespace.startsWith(t));if(e&&(i=i.filter(o=>o.apihost===e)),i.length>0)if(i.length>1&&r){let o;return e?o=i.map(s=>s.namespace):o=i.map(s=>`${s.namespace} on ${s.apihost}`),await r(o)}else{if(i.every(o=>o.namespace===i[0].namespace))return i[0].namespace;throw new Error(`Prefix '${t}' matches multiple namespaces`)}}return e?`${t} on ${e}`:t}function D(t){if(!!t)return t.includes(":")?t:t.includes(".")?"https://"+t:(d.hostPrefix&&!t.startsWith(d.hostPrefix)&&(t=d.hostPrefix+t),"https://"+t+d.defaultHostSuffix)}function F(t,e){if(process.env.AIO_RUNTIME_NAMESPACE="_",e&&e.apihost&&e.auth)return;const r=m.authPersister.loadCredentialStoreIfPresent();let n,i,o;if(r&&(n=r.currentHost,i=r.currentNamespace),n&&i){const s=r.credentials[n][i];s?(g("have creds for current namespace"),o=s.api_key):g(`Error retrieving credentials for '${i}' on host '${n}'`)}else t.handleError(`You do not have a current namespace.  ${d.namespaceRepair}`);process.env.AIO_RUNTIME_APIHOST=n,process.env.AIO_RUNTIME_AUTH=o}0&&(module.exports={CaptureLogger,NimBaseCommand,NimFeedback,branding,disambiguateNamespace,parseAPIHost,replaceErrors,setBranding,setHelpHelper});
+//# sourceMappingURL=NimBaseCommand.js.map
